export const backendQuestions = [
  {
    id: 'be-001',
    title: 'Explain the difference between SQL and NoSQL databases',
    description: 'Compare SQL and NoSQL databases, including their use cases, advantages, and disadvantages.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['databases', 'sql', 'nosql', 'data-modeling', 'relational', 'document-store', 'key-value', 'graph-database', 'acid-properties', 'cap-theorem', 'consistency', 'availability', 'partition-tolerance', 'scaling'],
  },
  {
    id: 'be-002',
    title: 'What is RESTful API design and its principles?',
    description: 'Explain REST architecture principles and best practices for designing RESTful APIs.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['rest', 'api', 'http', 'web-services', 'stateless', 'resource-based', 'http-methods', 'status-codes', 'json', 'xml', 'versioning', 'pagination', 'filtering', 'documentation'],
  },
  {
    id: 'be-003',
    title: 'How do you handle authentication and authorization?',
    description: 'Discuss different authentication methods and authorization strategies for securing web applications.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['authentication', 'authorization', 'jwt', 'oauth', 'security', 'session-management', 'cookies', 'tokens', 'rbac', 'abac', 'multi-factor-auth', 'password-hashing', 'bcrypt', 'salt'],
  },
  {
    id: 'be-004',
    title: 'Explain microservices architecture',
    description: 'Describe microservices architecture, its benefits, challenges, and when to use it over monolithic architecture.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['microservices', 'architecture', 'distributed-systems', 'scalability', 'service-discovery', 'api-gateway', 'circuit-breaker', 'event-driven', 'saga-pattern', 'containerization', 'orchestration', 'monitoring'],
  },
  {
    id: 'be-005',
    title: 'How do you optimize database performance?',
    description: 'Discuss various techniques for improving database query performance and overall database optimization.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['database', 'performance', 'indexing', 'query-optimization', 'execution-plans', 'normalization', 'denormalization', 'partitioning', 'sharding', 'connection-pooling', 'caching', 'profiling'],
  },
  {
    id: 'be-006',
    title: 'What is caching and how do you implement it?',
    description: 'Explain different types of caching strategies and their implementation in web applications.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['caching', 'redis', 'memcached', 'performance', 'cache-strategies', 'cache-aside', 'write-through', 'write-behind', 'ttl', 'cache-invalidation', 'cdn', 'browser-cache'],
  },
  {
    id: 'be-007',
    title: 'How do you handle error handling and logging?',
    description: 'Discuss best practices for error handling, logging, and monitoring in backend applications.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['error-handling', 'logging', 'monitoring', 'debugging', 'exception-handling', 'try-catch', 'log-levels', 'structured-logging', 'alerting', 'metrics', 'tracing', 'observability'],
  },
  {
    id: 'be-008',
    title: 'Explain load balancing and its types',
    description: 'Describe load balancing concepts, different algorithms, and implementation strategies.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['load-balancing', 'scalability', 'high-availability', 'infrastructure', 'round-robin', 'least-connections', 'weighted', 'health-checks', 'sticky-sessions', 'layer-4', 'layer-7', 'reverse-proxy'],
  },
  {
    id: 'be-009',
    title: 'What is message queuing and when would you use it?',
    description: 'Explain message queue systems, their benefits, and use cases in distributed applications.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['message-queues', 'async-processing', 'rabbitmq', 'kafka', 'pub-sub', 'producer-consumer', 'dead-letter-queue', 'acknowledgments', 'durability', 'ordering', 'backpressure', 'event-streaming'],
  },
  {
    id: 'be-010',
    title: 'How do you design for scalability?',
    description: 'Discuss strategies and patterns for building scalable backend systems that can handle growth.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['scalability', 'system-design', 'architecture', 'performance', 'horizontal-scaling', 'vertical-scaling', 'stateless-design', 'database-scaling', 'caching-layers', 'cdn', 'auto-scaling', 'capacity-planning'],
  },
  {
    id: 'be-011',
    title: 'What is ACID in database systems?',
    description: 'Explain the ACID properties and their importance in transactional databases.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['acid-properties', 'transactions', 'databases', 'consistency', 'isolation', 'durability', 'atomicity'],
  },
  {
    id: 'be-012',
    title: 'Describe the CAP theorem and its implications',
    description: 'Discuss the CAP theorem, its components, and how it affects distributed system design.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['cap-theorem', 'consistency', 'availability', 'partition-tolerance', 'distributed-systems'],
  },
  {
    id: 'be-013',
    title: 'How do you secure sensitive data in transit and at rest?',
    description: 'Discuss encryption techniques and best practices for securing data both in transit and at rest.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['encryption', 'ssl', 'tls', 'data-security', 'at-rest', 'in-transit', 'hashing', 'compliance'],
  },
  {
    id: 'be-014',
    title: 'What is the difference between synchronous and asynchronous processing?',
    description: 'Explain the concepts of synchronous and asynchronous processing with examples and use cases.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['synchronous', 'asynchronous', 'event-loop', 'callbacks', 'promises', 'concurrency', 'parallelism'],
  },
  {
    id: 'be-015',
    title: 'Explain the role of middleware in backend frameworks',
    description: 'Describe what middleware is, how it works, and common use cases in backend development.',
    category: 'technical' as const,
    difficulty: 'easy' as const,
    tags: ['middleware', 'express', 'request-response', 'logging', 'authentication', 'error-handling'],
  },
  {
    id: 'be-016',
    title: 'How do you prevent SQL injection attacks?',
    description: 'Discuss techniques and best practices to prevent SQL injection vulnerabilities in applications.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['security', 'sql-injection', 'prepared-statements', 'input-validation', 'orm', 'parameterized-queries'],
  },
  {
    id: 'be-017',
    title: 'What is containerization and why is it useful?',
    description: 'Explain the concept of containerization, its benefits, and popular tools like Docker.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['containerization', 'docker', 'devops', 'isolation', 'deployment', 'microservices'],
  },
  {
    id: 'be-018',
    title: 'Describe the difference between vertical and horizontal scaling',
    description: 'Compare vertical and horizontal scaling, including their pros, cons, and use cases.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['scaling', 'vertical-scaling', 'horizontal-scaling', 'performance', 'infrastructure'],
  },
  {
    id: 'be-019',
    title: 'How do you implement rate limiting in APIs?',
    description: 'Discuss strategies and tools for implementing rate limiting to protect APIs from abuse.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['rate-limiting', 'api', 'security', 'throttling', 'middleware', 'abuse-prevention'],
  },
  {
    id: 'be-020',
    title: 'What is eventual consistency?',
    description: 'Explain the concept of eventual consistency and where it is used in distributed systems.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['eventual-consistency', 'distributed-systems', 'databases', 'cap-theorem', 'replication'],
  },
  {
    id: 'be-021',
    title: 'How do you design a RESTful API versioning strategy?',
    description: 'Discuss different approaches to API versioning and their pros and cons.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['api', 'rest', 'versioning', 'backward-compatibility', 'uri', 'headers'],
  },
  {
    id: 'be-022',
    title: 'What is the difference between monolithic and microservices architectures?',
    description: 'Compare monolithic and microservices architectures, including their advantages and disadvantages.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['monolithic', 'microservices', 'architecture', 'scalability', 'maintenance'],
  },
  {
    id: 'be-023',
    title: 'Explain the concept of API gateways',
    description: 'Describe what an API gateway is, its role in microservices, and common features.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['api-gateway', 'microservices', 'routing', 'security', 'rate-limiting', 'aggregation'],
  },
  {
    id: 'be-024',
    title: 'How do you handle file uploads in backend applications?',
    description: 'Discuss best practices and common tools for handling file uploads securely and efficiently.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['file-upload', 'multipart', 'security', 'validation', 'cloud-storage', 'streaming'],
  },
  {
    id: 'be-025',
    title: 'What is a reverse proxy and how is it used?',
    description: 'Explain the concept of a reverse proxy, its benefits, and common use cases in backend systems.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['reverse-proxy', 'nginx', 'load-balancing', 'security', 'caching'],
  },
  {
    id: 'be-026',
    title: 'Describe the OAuth 2.0 authorization framework',
    description: 'Explain how OAuth 2.0 works, its grant types, and its use in securing APIs.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['oauth2', 'authorization', 'api-security', 'grant-types', 'access-token', 'refresh-token'],
  },
  {
    id: 'be-027',
    title: 'How do you monitor and alert for backend system health?',
    description: 'Discuss tools and strategies for monitoring, logging, and alerting in backend systems.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['monitoring', 'alerting', 'logging', 'prometheus', 'grafana', 'metrics', 'observability'],
  },
  {
    id: 'be-028',
    title: 'What is a deadlock and how can it be prevented?',
    description: 'Explain the concept of deadlocks in databases or concurrent systems and prevention strategies.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['deadlock', 'concurrency', 'databases', 'transactions', 'locking', 'prevention'],
  },
  {
    id: 'be-029',
    title: 'How do you implement background jobs and task queues?',
    description: 'Discuss the use of background job processing and task queues in backend applications.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['background-jobs', 'task-queue', 'worker', 'asynchronous', 'bull', 'sidekiq', 'celery'],
  },
  {
    id: 'be-030',
    title: 'Explain the difference between PUT and PATCH HTTP methods',
    description: 'Describe the differences between PUT and PATCH in RESTful APIs and when to use each.',
    category: 'technical' as const,
    difficulty: 'easy' as const,
    tags: ['http', 'put', 'patch', 'rest', 'api', 'methods'],
  },
  {
    id: 'be-031',
    title: 'What is a webhook and how does it work?',
    description: 'Explain the concept of webhooks, their use cases, and how to implement them securely.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['webhook', 'event-driven', 'api', 'callback', 'security', 'integration'],
  },
];