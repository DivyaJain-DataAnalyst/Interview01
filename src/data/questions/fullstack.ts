export const fullstackQuestions = [
  {
    id: 'fs-001',
    title: 'Explain your approach to full-stack application architecture',
    description: 'Describe how you would design and structure a modern full-stack application, including technology choices, separation of concerns, and communication between layers.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['architecture', 'full-stack', 'frontend', 'backend', 'api-design', 'database', 'separation-of-concerns', 'microservices', 'monolith', 'scalability', 'maintainability', 'deployment'],
  },
  {
    id: 'fs-002',
    title: 'How do you handle state management across the full stack?',
    description: 'Discuss your approach to managing application state from the database through the backend to the frontend, including strategies for consistency and performance.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['state-management', 'redux', 'context-api', 'caching', 'database', 'api', 'real-time', 'websockets', 'consistency', 'performance', 'synchronization'],
  },
  {
    id: 'fs-003',
    title: 'Describe your experience with CI/CD pipelines',
    description: 'Explain how you set up and maintain continuous integration and deployment pipelines for full-stack applications, including testing strategies and deployment environments.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['ci-cd', 'devops', 'automation', 'testing', 'deployment', 'github-actions', 'jenkins', 'docker', 'kubernetes', 'infrastructure-as-code', 'monitoring'],
  },
  {
    id: 'fs-004',
    title: 'How do you approach database design for a full-stack application?',
    description: 'Discuss your methodology for designing database schemas, choosing between SQL and NoSQL, and ensuring data integrity and performance across the application.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['database-design', 'sql', 'nosql', 'schema', 'normalization', 'indexing', 'relationships', 'orm', 'migrations', 'performance', 'scalability'],
  },
  {
    id: 'fs-005',
    title: 'Explain your approach to authentication and authorization',
    description: 'Describe how you implement secure authentication and authorization across the full stack, including token management, session handling, and permission systems.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['security', 'authentication', 'authorization', 'jwt', 'oauth', 'sessions', 'cookies', 'rbac', 'permissions', 'identity-management', 'best-practices'],
  },
  {
    id: 'fs-006',
    title: 'How do you ensure responsive design across different devices?',
    description: 'Discuss your strategies for creating responsive and adaptive user interfaces that work well across desktop, tablet, and mobile devices.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['responsive-design', 'mobile-first', 'css', 'media-queries', 'flexbox', 'grid', 'adaptive-design', 'progressive-enhancement', 'cross-browser', 'testing'],
  },
  {
    id: 'fs-007',
    title: 'Describe your experience with API design and implementation',
    description: 'Explain your approach to designing, documenting, and implementing APIs, including RESTful principles, GraphQL, or other paradigms.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['api-design', 'rest', 'graphql', 'documentation', 'versioning', 'error-handling', 'rate-limiting', 'security', 'performance', 'swagger', 'openapi'],
  },
  {
    id: 'fs-008',
    title: 'How do you handle error management across the full stack?',
    description: 'Discuss your strategies for error handling, logging, monitoring, and debugging across frontend, backend, and database layers.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['error-handling', 'logging', 'monitoring', 'debugging', 'observability', 'alerting', 'user-experience', 'graceful-degradation', 'resilience', 'recovery'],
  },
  {
    id: 'fs-009',
    title: 'Explain your approach to testing in a full-stack application',
    description: 'Describe your testing strategy across all layers of the application, including unit tests, integration tests, end-to-end tests, and performance testing.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['testing', 'unit-tests', 'integration-tests', 'e2e-tests', 'tdd', 'jest', 'cypress', 'mocha', 'test-coverage', 'mocking', 'test-pyramid'],
  },
  {
    id: 'fs-010',
    title: 'How do you optimize performance in a full-stack application?',
    description: 'Discuss your strategies for identifying and resolving performance bottlenecks across the frontend, backend, and database layers.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['performance', 'optimization', 'caching', 'lazy-loading', 'code-splitting', 'database-indexing', 'query-optimization', 'load-balancing', 'cdn', 'profiling', 'monitoring'],
  },
];