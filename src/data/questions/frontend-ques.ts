export const frontendQuestions = [
  {
    id: 'fe-001',
    title: 'Explain the difference between let, const, and var in JavaScript',
    description: 'Describe the scope, hoisting behavior, and use cases for each variable declaration method in JavaScript.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['javascript', 'variables', 'scope', 'hoisting', 'es6', 'block-scope', 'function-scope', 'temporal-dead-zone', 'redeclaration', 'reassignment', 'memory-management', 'best-practices'],
  },
  {
    id: 'fe-002',
    title: 'What is the Virtual DOM and how does React use it?',
    description: 'Explain the concept of Virtual DOM, its benefits, and how React leverages it for efficient rendering.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['react', 'virtual-dom', 'performance', 'rendering', 'reconciliation', 'diffing-algorithm', 'jsx', 'component-lifecycle', 'state-management', 'optimization', 'dom-manipulation', 'fiber-architecture'],
  },
  {
    id: 'fe-003',
    title: 'How do you optimize website performance?',
    description: 'Discuss various techniques and strategies you would use to improve website loading speed and user experience.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['performance', 'optimization', 'web-vitals', 'user-experience', 'lazy-loading', 'code-splitting', 'caching', 'minification', 'compression', 'cdn', 'critical-rendering-path', 'lighthouse', 'core-web-vitals', 'lcp', 'fid', 'cls'],
  },
  {
    id: 'fe-004',
    title: 'Explain CSS Flexbox vs CSS Grid',
    description: 'Compare and contrast Flexbox and CSS Grid, including when to use each layout method.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['css', 'flexbox', 'grid', 'layout', 'responsive-design', 'alignment', 'justify-content', 'align-items', 'grid-template', 'flex-direction', 'flex-wrap', 'gap', 'auto-fit', 'auto-fill'],
  },
  {
    id: 'fe-005',
    title: 'What are React Hooks and why were they introduced?',
    description: 'Explain the purpose of React Hooks, their benefits over class components, and provide examples of common hooks.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['react', 'hooks', 'functional-components', 'state-management', 'usestate', 'useeffect', 'usecontext', 'usereducer', 'usememo', 'usecallback', 'custom-hooks', 'lifecycle-methods', 'side-effects'],
  },
  {
    id: 'fe-006',
    title: 'How do you handle state management in large React applications?',
    description: 'Discuss different state management solutions and patterns for complex React applications.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['react', 'state-management', 'redux', 'context-api', 'zustand', 'recoil', 'mobx', 'global-state', 'local-state', 'prop-drilling', 'state-normalization', 'middleware', 'devtools', 'performance'],
  },
  {
    id: 'fe-007',
    title: 'Explain event delegation in JavaScript',
    description: 'Describe what event delegation is, how it works, and provide practical examples of its usage.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['javascript', 'events', 'dom', 'performance', 'event-bubbling', 'event-capturing', 'event-target', 'dynamic-content', 'memory-optimization', 'event-listeners', 'closest-method', 'matches-method'],
  },
  {
    id: 'fe-008',
    title: 'What is responsive web design and how do you implement it?',
    description: 'Explain responsive design principles and demonstrate various techniques for creating mobile-friendly websites.',
    category: 'technical' as const,
    difficulty: 'easy' as const,
    tags: ['responsive-design', 'css', 'mobile-first', 'media-queries', 'breakpoints', 'fluid-grids', 'flexible-images', 'viewport-meta', 'rem-units', 'em-units', 'clamp-function', 'container-queries'],
  },
  {
    id: 'fe-009',
    title: 'How do you ensure web accessibility?',
    description: 'Discuss web accessibility standards and practical techniques for making websites accessible to all users.',
    category: 'technical' as const,
    difficulty: 'medium' as const,
    tags: ['accessibility', 'a11y', 'wcag', 'inclusive-design', 'aria-labels', 'semantic-html', 'keyboard-navigation', 'screen-readers', 'color-contrast', 'focus-management', 'alt-text', 'landmarks'],
  },
  {
    id: 'fe-010',
    title: 'Explain the concept of Progressive Web Apps (PWAs)',
    description: 'Describe what PWAs are, their key features, and how to implement PWA functionality.',
    category: 'technical' as const,
    difficulty: 'hard' as const,
    tags: ['pwa', 'service-workers', 'offline', 'web-app-manifest', 'push-notifications', 'background-sync', 'cache-strategies', 'app-shell', 'installable', 'responsive', 'secure', 'progressive-enhancement'],
  },
];